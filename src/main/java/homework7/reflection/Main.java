package homework7.reflection;

/*
Java. Уровень 3. Урок 7.
Домашнее задание 7. "Reflection API и аннотации".

Создать класс, который может выполнять «тесты», в качестве тестов выступают классы с наборами методов с аннотациями @Test.
Для этого у него должен быть статический метод start(), которому в качестве параметра передаётся или объект типа Class, или имя класса.
Из «класса-теста» вначале должен быть запущен метод с аннотацией @BeforeSuite, если такой имеется,
далее запущены методы с аннотациями @Test,
а по завершению всех тестов – метод с аннотацией @AfterSuite.

К каждому тесту необходимо также добавить приоритеты (int числа от 1 до 10), в соответствии с которыми будет выбираться порядок их выполнения, если приоритет одинаковый, то порядок не имеет значения.
Методы с аннотациями @BeforeSuite и @AfterSuite должны присутствовать в единственном экземпляре, иначе необходимо бросить RuntimeException при запуске «тестирования».

Все имеющиеся у нас методы и необходимо отсортировать правильным образом, чтобы запускались поочерёдно от первого к последнему. К примеру, от одного и до пяти.
Т.е., если в аннотации стоит значение больше чем 5, то он автоматически остановится на пяти. Сортировку сделать на своё усмотрение самым простым образом.

P.S.:  Это домашнее задание никак не связано с темой тестирования через JUnit и использованием этой библиотеки, то есть проект пишется с нуля.
*/

import homework7.tests.Testing;

import java.lang.reflect.InvocationTargetException;

public class Main {
    public static void main(String[] args) {
        try {
            ReflectionTests.start(Testing.class);
        } catch (InvocationTargetException | IllegalAccessException | NoSuchMethodException e) {
            throw new RuntimeException(e);
        }
    }
}
